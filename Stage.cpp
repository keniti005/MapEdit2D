#include "Stage.h"

namespace
{
	//const int IMAGE_SIZE = { 32 };//画像サイズ
	//const int MAP_CHIP_WIDTH = { 16 };
	//const int MAP_CHIP_HEIGHT = { 12 };
	//const int MAP_WIDTH = { 32 };
	//const int MAP_HEIGHT = { 22 };
	//const int myMap[MAP_HEIGHT][MAP_WIDTH]
	//	{
	//		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,0,0,0},
	//		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,167,150,150,150,150,150,150,150,150,149,149,149,149,149,149},
	//		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,150,150,150,150,150,150,150,150,150,149,149,149,149,149,149},
	//		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,150,150,150,150,150,150,150,150,150,0,148,0,0,0,0},
	//		{0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,0,0,148,0,0,0},
	//		{0,156,0,0,0,0,0,0,0,0,0,0,102,102,102,102,0,55,55,55,55,55,55,55,55,55,0,0,0,0,148,0},
	//		{0,0,0,102,0,0,6,0,0,0,0,0,102,105,105,102,102,0,0,0,0,0,0,0,156,0,0,0,0,0,0,0},
	//		{0,0,0,102,0,0,0,0,0,0,0,0,102,105,105,105,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	//		{0,0,0,102,0,0,0,0,6,0,0,0,102,105,105,105,102,0,0,0,0,0,0,0,0,0,0,156,0,0,0,0},
	//		{0,0,0,102,0,0,0,0,0,0,0,0,102,102,105,105,102,0,0,2,0,18,19,0,0,0,0,156,0,0,0,0},
	//		{0,0,0,102,0,0,0,0,0,0,0,0,0,102,102,102,102,0,0,0,2,34,35,2,0,0,0,0,0,0,0,0},
	//		{0,0,0,0,0,6,0,0,22,23,0,0,0,0,0,0,0,0,6,0,0,0,0,2,0,0,0,0,0,0,0,0},
	//		{0,0,0,0,0,0,0,0,38,39,0,0,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	//		{0,0,0,0,0,0,0,0,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,0,0,0,0},
	//		{0,146,146,146,0,0,0,0,38,39,0,0,0,0,0,0,0,0,0,0,0,0,78,62,62,62,62,79,0,0,0,0},
	//		{0,146,105,146,0,0,0,0,0,0,0,0,0,0,0,0,0,156,0,102,102,0,62,0,0,0,0,62,0,0,0,0},
	//		{0,146,146,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,0,0,62,0,76,77,0,62,0,0,0,0},
	//		{51,50,51,51,51,51,0,0,0,0,0,0,156,0,0,0,0,0,0,0,0,0,62,0,92,93,0,62,0,0,0,0},
	//		{66,51,51,51,51,51,51,0,0,0,0,0,160,161,0,0,0,0,0,0,0,0,94,62,62,62,62,95,0,0,0,0},
	//		{66,51,51,158,51,51,51,50,0,0,0,0,176,177,0,0,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	//		{51,51,51,51,83,51,51,51,160,161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156,0,0},
	//		{51,51,83,51,51,51,51,51,176,177,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}

	//	};
	//{
	//	{ 0,1,2,3,4,5,6,7,8,9 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 },
	//	{ 0,0,0,0,0,0,0,0,0,0 }
	//};
}

Stage::Stage()
	: GameObject()//, bgHandle(nullptr)
{
//	//bgHandle = new int[MAP_WIDTH * MAP_HEIGHT];
//	bgHandle_ = std::vector<int>(MAP_CHIP_WIDTH * MAP_CHIP_HEIGHT, -1);
//
//	//bgHandle = LoadGraph("./bg.png");
//	LoadDivGraph("./bg.png", MAP_CHIP_WIDTH * MAP_CHIP_HEIGHT, MAP_CHIP_WIDTH , MAP_CHIP_HEIGHT, IMAGE_SIZE, IMAGE_SIZE, bgHandle_.data());

	mapChip_ = new MapChip();//マップチップのインスタンスを作成
	mapEdit_ = new MapEdit();
}

Stage::~Stage()
{
	//for (int i = 0;i < MAP_CHIP_WIDTH * MAP_CHIP_HEIGHT;i++)
	//{
	//	if (bgHandle_[i] != -1)
	//	{
	//		DeleteGraph(bgHandle_[i]);
	//		bgHandle_[i] = -1;
	//	}
	//}
	//delete[] bgHandle;

	delete mapChip_;
	delete mapEdit_;

}

void Stage::Update()
{
}

void Stage::Draw()
{
		////DrawGraph(0, 0, bgHandle, FALSE);
		//for (int j = 0;j < MAP_HEIGHT;j++)
		//{
		//	for (int i = 0;i < MAP_WIDTH;i++)
		//	{
		//		if (bgHandle_[myMap[j][i]] != -1)
		//		{
		//			DrawGraph(i * IMAGE_SIZE, j * IMAGE_SIZE, bgHandle_[myMap[j][i]], TRUE);
		//		}
		//	}
		//}
	
}

